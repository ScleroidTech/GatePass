
apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.scleroidtech.gatepass"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            /* minifyEnabled true
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'*/
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }
    /* flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }
*/
/*
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }
*/

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    buildTypes.each {
        //TODO Change this sometime
        it.buildConfigField 'String', 'API_BASE_URL', "\"http://jsonplaceholder.typicode.com\""
    }

//Enable DataBinding
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {

    // App's dependencies, including test


    //noinspection GradleCompatible
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    //ConstraintLayout
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    implementation "com.google.guava:guava:$rootProject.guavaVersion"

    //   compile "com.google.guava:guava:$rootProject.guavaVersion"
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.lifecycleVersion"
    //  implementation 'com.wdullaer:materialdatetimepicker:3.5.1'

    // RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomVersion"


    // Dagger dependencies
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"


    //FireBase
    implementation "com.google.firebase:firebase-auth:$rootProject.firebaseVersion"
    implementation 'com.firebaseui:firebase-ui-auth:3.2.2'
  //  implementation "com.google.firebase:firebase-firestore:$rootProject.firebaseVersion"
    implementation 'com.google.firebase:firebase-firestore:16.0.0'

    // ButterKnife
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    //Timber
    implementation 'com.jakewharton.timber:timber:4.6.1'


    //Awesome Validation
    implementation 'com.basgeekball:awesome-validation:2.0'



    // App's dependencies, including test
    implementation 'com.android.support:multidex:1.0.3'
    //  implementation 'com.android.support:support-v4:27.1.1'



    // gson Library
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    implementation 'com.annimon:stream:1.1.9'

    implementation "com.google.guava:guava:$rootProject.guavaVersion"
    //   compileOnly "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // Priority Job Queue
    //  implementation "com.birbit:android-priority-jobqueue:$project.priorityJobQueueVersion"

    //GCM Network Manager
    //  implementation "com.google.android.gms:play-services-gcm:$project.playServicesVersion"

    // OkHttp Logging Interceptor
    //  implementation "com.squareup.okhttp3:okhttp:$project.okHttpVersion"
    // implementation "com.squareup.okhttp3:logging-interceptor:$project.okHttpVersion"


    //Awesome Validation
    //implementation 'com.basgeekball:awesome-validation:2.0'

    //Material Style Dialog
    implementation 'com.github.javiersantos:MaterialStyledDialogs:2.1'
    //Toasty
    implementation 'com.github.GrenderG:Toasty:1.2.5'

    // Glide image library
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    implementation 'com.birbit:android-priority-jobqueue:2.0.1'

    // OkHttp Logging Interceptor
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"

    //RxJava Bitch
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"


    //Test Implementation
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    //  implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"


    //For Fake Data, should not be in Production
    implementation 'com.github.blocoio:faker:1.2.7'

    //Eventbus by greenrobot
    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"


    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    /*  // Dependencies for local unit tests
        testCompile "junit:junit:$rootProject.ext.junitVersion"
        testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
        testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

        // Android Testing Support Library's runner and rules
        androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
        androidTestCompile "com.android.support.test:rules:$rootProject.ext.rulesVersion"

        androidTestCompile "android.arch.persistence.room:testing:$rootProject.roomVersion"

        // Dependencies for Android unit tests
        androidTestCompile "junit:junit:$rootProject.ext.junitVersion"
        androidTestCompile "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
        androidTestCompile "com.google.dexmaker:dexmaker:$rootProject.ext.dexmakerVersion"
        androidTestCompile "com.google.dexmaker:dexmaker-mockito:$rootProject.ext.dexmakerVersion"

        // Espresso UI Testing
        androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
        androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
        androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
        androidTestCompile "com.android.support.test.espresso.idling:idling-concurrent:$rootProject.espressoVersion"
        compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

        // Resolve conflicts between main and test APK:
        androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
        androidTestCompile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
        androidTestCompile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
        androidTestCompile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
        androidTestCompile "com.android.support:design:$rootProject.supportLibraryVersion"
        androidTestCompile "com.google.code.findbugs:jsr305:3.0.2"
    */

}

apply plugin: 'com.google.gms.google-services'